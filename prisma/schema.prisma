// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
  }

model Store {
  id String @id @default(uuid())
  name String
  userId String
  billboards Billboard[] @relation("StoreToBillboard")

  bodyTypes BodyType[] @relation("StoreToBodyType")
  makes Make[] @relation("StoreToMake")
  // models Model[] @relation("StoreToModel")
  colors Color[] @relation("StoreToColor")

  products Product[] @relation("StoreToProduct")
  orders Order[] @relation("StoreToOrder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Billboard {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToBillboard", fields: [storeId], references: [id])
  label String
  imageUrl String
  categories BodyType[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}
model BodyType {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToBodyType", fields: [storeId], references: [id])
  billboardId String
  billboard Billboard @relation(fields: [billboardId], references: [id])
  product Product[] @relation("BodyTypeToProduct")
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([billboardId])
}
model Make {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToMake", fields: [storeId], references: [id])
  name String
  value String
  models Model[] @relation("MakeToModel")
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])

}
model Model {
  id String @id @default(uuid())
  name String
  value String
  products Product[]
  makeId String
  make Make @relation("MakeToModel",fields: [makeId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([makeId])

}
model Color {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToColor", fields: [storeId], references: [id])
  name String
  value String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}


model Product {
  id String @id @default(uuid())

  storeId String
  store Store @relation("StoreToProduct", fields: [storeId], references: [id])
  name String
  price Int
  mileage Int
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)


  // TODO: add position for routing

  bodyTypeId String
  bodyType BodyType @relation("BodyTypeToProduct", fields: [bodyTypeId], references: [id])

  makeId String
  make Make @relation(fields: [makeId], references: [id])

  modelId String
  model Model @relation(fields: [modelId], references: [id])
  
  colorId String
  color Color @relation(fields: [colorId], references: [id])

  year Int
  fuel FuelType
  gearbox GearboxType
  typeOfDrive TypeOfDriveOption
  
  images Image[]
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
  @@index([bodyTypeId])
  @@index([makeId])
  @@index([modelId])
  @@index([colorId])
}


model Image {
  id String @id @default(uuid())
  productId String
  product Product @relation(fields: [productId], references: [id], onDelete:Cascade)
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([productId])
}

model Order {
  id String @id @default(uuid())
  storeId String
  store Store @relation("StoreToOrder", fields: [storeId], references: [id])
  orderItems OrderItem[]
  isPaid  Boolean @default(false)
  phone String @default("")
  address String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([storeId])
}

model OrderItem {
  id String @id @default(uuid())
  orderId String
  order Order @relation(fields: [orderId], references: [id])
  productId String
  product Product @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
}

enum FuelType {
  DIESEL
  PETROL
  LPG
  LPG_PETROL
  GYBRID
  ELECTRIC
  HYDROGEN
}
enum GearboxType {
  AUTOMATIC
  MANUAL
}
enum TypeOfDriveOption {
  ALL_WD
  AWD
}

